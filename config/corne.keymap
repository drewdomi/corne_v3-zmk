#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// TAP_DANCE settings
#define TAP_SPEED 200  // Define a value in milliseconds for the tap speed

#define TD_TAB    &td0 // TAB ESC

/ {
    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <TAP_SPEED>;
            bindings = <&kp TAB>, <&kp ESC>;
        };

        home_pgup: home_pgup {
            compatible = "zmk,behavior-mod-morph";
            label = "HOME_PGUP";
            #binding-cells = <0>;
            bindings = <&kp HOME>, <&kp PG_UP>;

            // When shift is held, switch to PG_UP
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        end_pgdn: end_pgdn {
            compatible = "zmk,behavior-mod-morph";
            label = "END_PGDN";
            #binding-cells = <0>;
            bindings = <&kp END>, <&kp PG_DN>;

            // When shift is held, switch to PG_DN
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <180>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            global-quick-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
TD_TAB                   &kp Q           &kp W           &kp E        &kp R             &kp T            &kp Y        &kp U         &kp I        &kp O            &kp P               &kp BACKSPACE
&kp LCTRL                &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LCTRL D  &hm LEFT_SHIFT F  &kp G            &kp H        &hm RSHIFT J  &hm RCTRL K  &hm RIGHT_ALT L  &hm RGUI SEMICOLON  &kp SQT
&mt LEFT_SHIFT CAPSLOCK  &kp Z           &kp X           &kp C        &kp V             &kp B            &kp N        &kp M         &kp COMMA    &kp DOT          &kp FSLH            &kp RIGHT_SHIFT
                                                         &mo 3        &lt 2 SPACE       &lt 1 BACKSPACE  &lt 2 ENTER  &lt 1 SPACE   &mo 3
            >;
        };

        lower {
            bindings = <
&kp ESCAPE        &kp N1           &kp N2       &kp N3     &kp N4      &kp N5       &kp N6            &kp N7             &kp N8         &kp N9                &kp N0                 &kp BACKSPACE
&kp LEFT_CONTROL  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT  &kp CARET         &kp AMPERSAND      &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ENTER
&kp LEFT_SHIFT    &kp GRAVE        &none        &none      &none       &none        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH  &kp MINUS             &kp EQUAL              &kp RIGHT_SHIFT
                                                &none      &none       &none        &none             &none              &none
            >;
        };

        upper {
            bindings = <
&kp ESCAPE        &kp F1  &kp F2     &kp F3      &kp F4       &kp F5      &kp F6          &kp F7          &kp F8        &kp F9           &kp F10  &kp DELETE
&kp LEFT_CONTROL  &none   &none      &none       &none        &home_pgup  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none    &kp F11
&kp LEFT_SHIFT    &none   &kp K_CUT  &kp K_COPY  &kp K_PASTE  &end_pgdn   &none           &none           &none         &none            &none    &kp F12
                                     &none       &none        &none       &none           &none           &none
            >;
        };

        extras {
            bindings = <
&kp C_MUTE         &kp C_PREV  &kp C_NEXT  &kp C_PP  &kp C_VOLUME_DOWN  &kp C_VOL_UP  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &none            &sys_reset       &bt BT_CLR
&none              &none       &none       &none     &none              &kp C_BRI_UP  &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &none
&ext_power EP_TOG  &none       &sys_reset  &none     &none              &kp C_BRI_DN  &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_TOG
                                           &none     &none              &none         &none            &none            &none
            >;
        };
    };
};
